{"ast":null,"code":"'use strict';\n\nvar base58 = require('bs58');\n\nvar createHash = require('create-hash'); // SHA256(SHA256(buffer))\n\n\nfunction sha256x2(buffer) {\n  var tmp = createHash('sha256').update(buffer).digest();\n  return createHash('sha256').update(tmp).digest();\n} // Encode a buffer as a base58-check encoded string\n\n\nfunction encode(payload) {\n  var checksum = sha256x2(payload);\n  return base58.encode(Buffer.concat([payload, checksum], payload.length + 4));\n}\n\nfunction decodeRaw(buffer) {\n  var payload = buffer.slice(0, -4);\n  var checksum = buffer.slice(-4);\n  var newChecksum = sha256x2(payload);\n  if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3]) return;\n  return payload;\n} // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n\n\nfunction decodeUnsafe(string) {\n  var array = base58.decodeUnsafe(string);\n  if (!array) return;\n  var buffer = new Buffer(array);\n  return decodeRaw(buffer);\n}\n\nfunction decode(string) {\n  var array = base58.decode(string);\n  var buffer = new Buffer(array);\n  var payload = decodeRaw(buffer);\n  if (!payload) throw new Error('Invalid checksum');\n  return payload;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  decodeUnsafe: decodeUnsafe,\n  // FIXME: remove in 2.0.0\n  decodeRaw: decodeUnsafe\n};","map":null,"metadata":{},"sourceType":"script"}